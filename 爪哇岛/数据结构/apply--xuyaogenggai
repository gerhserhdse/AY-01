package 数据结构.zhan.应用;

import 数据结构.zhan.LinkedeQueue链式队列;

//约瑟夫环问题
public class JosephusRing {
    public  void  outQueue(int n ,int m){//方法参数n表示队列中的人呢,m表示报的数
        //创建队列存放人
        LinkedeQueue链式队列<Integer> rings=new LinkedeQueue链式队列<Integer>();
        //n个人按顺序入队
        for (int i=1;i<=n;i++){
            //TODO  解决链式队列的后记得取消此注释
       //     rings.emqueue(i);
        }
        //统计报数变量
        int count=0;
        //队列不为空,一直报数处理
        while(!rings.isEmpty()){
            //元素出队并报数,判断报的数若为m,则直接输出,若不是m,则再次进队
            Integer deq=rings.dequeue();
            count++;
            if(count==m){

                System.out.println(deq+" ");
                count=0;
            }else
            {
              //TODO   取消注释
                // rings.enqueue(deq);//元素再次进入
            }
        }
    }
}

class textJ{
    public static void main(String[] args) {
        //队列中有10人报数3的出列
        JosephusRing j=new JosephusRing();
        System.out.println("队列中有10人,报数3的出列,刚出列的次序为:>");
        j.outQueue(10,3);
    }

}
